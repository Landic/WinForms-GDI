<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>